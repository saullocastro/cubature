name: Upload Python Package

on:
  push:
    tags:
      - '*.*.*'

jobs:     
  deploy:
    strategy:
      matrix:
        runs-on: [windows-latest, ubuntu-latest, macos-latest]
        python-version: [3.7, 3.8, 3.9, '3.10', '3.11']
    runs-on: ${{ matrix.runs-on }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      if: matrix.runs-on == 'windows-latest' || (matrix.runs-on == 'ubuntu-latest' && matrix.python-version == '3.10') || (matrix.runs-on == 'macos-latest')
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install --upgrade setuptools wheel twine
        python3 -m pip install -r requirements.txt
    - name: Upload source code
      if: matrix.runs-on == 'ubuntu-latest' && matrix.python-version == '3.11'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python3 setup.py sdist
        python3 -m twine upload dist/*.tar.gz
    - name: Build Windows or MAC-OS Python wheels
      if: matrix.runs-on == 'windows-latest' || matrix.runs-on == 'macos-latest'
      run: |
        python3 setup.py sdist bdist_wheel
    - name: Publish Windows or MAC-OS Python wheels
      if: matrix.runs-on == 'windows-latest' || matrix.runs-on == 'macos-latest'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python3 -m twine upload dist/*.whl
    - name: Build manylinux Python wheels
      if: matrix.runs-on == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: RalfG/python-wheels-manylinux-build@v0.4.2-manylinux2014_x86_64
      with:
        python-versions: 'cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310 cp311-cp311'
        build-requirements: 'pip cython numpy setuptools wheel twine'
    - name: Publish manylinux Python wheels
      if: matrix.runs-on == 'ubuntu-latest' && matrix.python-version == '3.11'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python3 -m twine upload dist/*-manylinux*.whl
